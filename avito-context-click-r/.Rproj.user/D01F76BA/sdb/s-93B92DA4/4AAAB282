{
    "contents" : "# #############################################################\n# # merge lucas and dmitry data\n# #############################################################\n# \ntic()\ncat(\"Merging datasets... \\n\")\n\nfn.register.wk(1)\ntmp <- foreach(tmp=1, .noexport=all.noexport) %dopar% {\n  \n  fn.init.worker('data_build/combine_datasets')\n\n  cat(\"\\nLoading datasets\\n\")\n  load(fn.rdata.file('data.reduced.all.RData'))\n\n  setkey(data.reduced.all, ID)\n  setkey(data.l2.all.tree, ID)\n  \n  cat(\"\\nCalculating common cols\\n\")\n  col.common <- intersect(colnames(data.reduced.all),\n                          colnames(data.l2.all.tree))\n  col.common <- unique(c(col.common, \"HistCTR\", \"Price\"))\n  \n  col.uniq.dtry <- sapply(data.reduced.all, \n                          function(x) length(unique(x)))\n  col.uniq.dtry <- col.uniq.dtry[!names(col.uniq.dtry) %in% \n                                   col.common]\n  \n  col.uniq.lucas <- sapply(data.l2.all.tree, \n                          function(x) length(unique(x)))\n  col.uniq.lucas <- col.uniq.lucas[\n    !names(col.uniq.lucas) %in%\n      col.common]\n  \n  # check for length and then for value\n  cols.match <- list()\n  for (ix in 1:length(col.uniq.lucas)) {\n    col.uniq <- col.uniq.lucas[ix]\n    col.same <- col.uniq.dtry[col.uniq.dtry == col.uniq]\n    if (length(col.same) >= 1) {\n      col.lucas.nam <- names(col.uniq)\n      for (col.dtry.nam in names(col.same)) {\n        if (all(data.reduced.all[[col.dtry.nam]] == \n                 data.l2.all.tree[[col.lucas.nam]])) {\n          cols.match[[col.lucas.nam]] <- col.dtry.nam\n          col.common <- unique(c(col.common, col.dtry.nam))\n        }\n      }\n    }\n  }\n  \n  cat(\"\\nCopying and cols and saving RData\\n\")\n  for (col.nam in setdiff(col.common, \"ID\")) {\n    data.reduced.all[, col.nam := NULL, with=F]\n  }\n  \n  data.all.tree.dl <- data.l2.all.tree\n  fn.soar.unload(data.l2.all.tree)\n  \n  setkey(data.reduced.all, ID)\n  setkey(data.all.tree.dl, ID)\n  \n  for (col.nam in setdiff(colnames(data.reduced.all), \"ID\")) {\n    data.all.tree.dl[, col.nam := data.reduced.all[[col.nam]], with=F]\n    data.reduced.all[, col.nam := NULL, with=F]\n    invisible(gc())\n  }\n  rm(data.reduced.all)\n  \n  save(data.all.tree.dl, file=fn.rdata.file('data.all.tree.dl.RData'))\n  \n  cat(\"\\nSaving dataset csv\\n\")\n  fn.write.csv.chunk(data=data.all.tree.dl,\n                     file=fn.out.file(\"data.all.tree.dl.csv\"),\n                     compress=F)\n  \n  cols.extra <- c(\"ID\", \"SearchID\", \"SearchType\", \"IsClick\")\n  cols.in <- sort(setdiff(colnames(data.all.tree.dl), \n                          c(cols.extra)))\n  \n  cols.in.combine <- cols.in\n  Store(cols.in.combine)\n  \n  rm(data.all.tree.dl)\n  invisible(gc())\n  \n  system(paste(\n    \"cd ../avito-context-click-py &&\", \n    \"pypy -u convert_csv_to_libsvm.py\", \n    \"-input_files ../data/output-r/data.all.tree.dl.csv\",\n    \"-out_selector '{\", \n    \"\\\"../data/output-libsvm/data.val.tr.libsvm\\\": lambda file, row: row[\\\"SearchType\\\"] in [\\\"hist\\\", \\\"tr\\\"],\",   \n    \"\\\"../data/output-libsvm/data.val.tt.libsvm\\\": lambda file, row: row[\\\"SearchType\\\"] in [\\\"val\\\"],\",\n    \"\\\"../data/output-libsvm/data.test.tr.libsvm\\\": lambda file, row: row[\\\"SearchType\\\"] in [\\\"hist\\\", \\\"tr\\\", \\\"val\\\"],\", \n    \"\\\"../data/output-libsvm/data.test.tt.libsvm\\\": lambda file, row: row[\\\"SearchType\\\"] in [\\\"test\\\"]\",\n    \"}'\",\n    \"-col_out IsClick\",\n    \"-col_in_num\", paste(cols.in.combine, collapse=' '),\n    \"-missing_values ''  'na'  'nan' 'NA' 'NaN' '-1'\",\n    \">> ../data/log/data_build/combine_datasets.log 2>&1\"))\n  \n  system(paste(\n    \"cd ../avito-context-click-py &&\", \n    \"pypy -u convert_csv_to_libsvm.py\", \n    \"-input_files ../data/output-r/data.all.tree.dl.csv\",\n    \"-out_selector '{\", \n    \"\\\"../data/output-libsvm/data.val.tr.nllh.libsvm\\\": lambda file, row: row[\\\"SearchType\\\"] in [\\\"tr\\\"],\",   \n    \"\\\"../data/output-libsvm/data.val.tt.nllh.libsvm\\\": lambda file, row: row[\\\"SearchType\\\"] in [\\\"val\\\"],\",\n    \"\\\"../data/output-libsvm/data.test.tr.nllh.libsvm\\\": lambda file, row: row[\\\"SearchType\\\"] in [\\\"val\\\"],\", \n    \"\\\"../data/output-libsvm/data.test.tt.nllh.libsvm\\\": lambda file, row: row[\\\"SearchType\\\"] in [\\\"test\\\"]\",\n    \"}'\",\n    \"-feat_map_file ../data/output-libsvm/data.all.nllh.fmap\",\n    \"-col_out IsClick\",\n    \"-col_in_num\", paste(cols.in.combine[!cols.in.combine %like% 'likeli'], \n                         collapse=' '),\n    \"-missing_values ''  'na'  'nan' 'NA' 'NaN' '-1'\",\n    \">> ../data/log/data_build/combine_datasets.log 2>&1\"))\n  \n  system(paste(\n    \"cd ../avito-context-click-py &&\", \n    \"pypy -u convert_csv_to_libsvm.py\", \n    \"-input_files ../data/output-r/data.all.tree.dl.csv\",\n    \"-out_selector '{\", \n    \"\\\"../data/output-libsvm/data.val.tr.nprob.libsvm\\\": lambda file, row: row[\\\"SearchType\\\"] in [\\\"tr\\\"],\",   \n    \"\\\"../data/output-libsvm/data.val.tt.nprob.libsvm\\\": lambda file, row: row[\\\"SearchType\\\"] in [\\\"val\\\"],\",\n    \"\\\"../data/output-libsvm/data.test.tr.nprob.libsvm\\\": lambda file, row: row[\\\"SearchType\\\"] in [\\\"tr\\\", \\\"val\\\"],\", \n    \"\\\"../data/output-libsvm/data.test.tt.nprob.libsvm\\\": lambda file, row: row[\\\"SearchType\\\"] in [\\\"test\\\"]\",\n    \"}'\",\n    \"-weight_builder_dict '{\", \n    \"\\\"../data/output-libsvm/data.val.tr.nprob.libsvm\\\": lambda file, row: 1/(float(row[\\\"SearchOrdUsrDesc\\\"])-3),\",   \n    \"\\\"../data/output-libsvm/data.test.tr.nprob.libsvm\\\": lambda file, row: 1/(float(row[\\\"SearchOrdUsrDesc\\\"])-0)\", \n    \"}'\",\n    \"-feat_map_file ../data/output-libsvm/data.all.nprob.fmap\",\n    \"-col_out IsClick\",\n    \"-col_in_num\", paste(cols.in.combine[!cols.in.combine %like% '^Prob'], \n                         collapse=' '),\n    \"-missing_values ''  'na'  'nan' 'NA' 'NaN' '-1'\",\n    \">> ../data/log/data_build/combine_datasets.log 2>&1\"))\n  \n    load(fn.rdata.file('data.full.all.RData'))\n    setkey(data.full.all, ID)\n    data.full.all[, ID := NULL]\n    cat(\"\\nSaving dataset csv\\n\")\n    fn.write.csv.chunk(data=data.full.all,\n                       file=fn.out.file(\"data.dtry.full.all.csv\"),\n                       compress=F)\n    rm(data.full.all)\n    invisible(gc())\n#     \n    cat('\\nMerging data\\n')\n    system(\n      paste(\n        \"paste -d ',' \",\n        fn.out.file(\"data.all.tree.full.csv\"),\n        fn.out.file(\"data.all.prob.full.csv\"),\n        fn.out.file(\"data.dtry.full.all.csv\"),\n        \"> \", fn.out.file(\"data.all.tree.full.combine.csv\")\n      )\n    )\n    #cat('\\nCompressing data\\n')\n    #system(\n    #  paste(\n    #    \"pigz -f\", fn.out.file(\"data.all.tree.full.combine.csv\")\n    #  )\n    #)\n    \n  cat('\\nSaving libsvm data\\n')\n  cols.in.combine.full <- c(\n    \"AdCatID\",\"AdHistCTR\",\"AdID\",\"AdParams\",\"AdPrice\",\n    \"AdTitleSZ\",\"CountAdSearch\",\"CountAdSearchCat\",\n    \"CountAdSearchLoc\",\"CountAdUsers\",\"CountIPUser\",\n    \"CountUserAd\",\"CountUserAdDupT1\",\"CountUserAdDupT3\",\n    \"CountUserAdT1\",\"CountUserAdT3\",\"CountUserSearch\",\n    \"CountUserSearchCategory\",\"CountUserSearchLocation\",\n    \"Position\",\"RatioAdPos1\",\"RatioSearchRuss\",\"SearchAdCount\",\n    \"SearchAdT1Count\",\"SearchAdT2Count\",\"SearchAdT3Count\",\n    \"SearchCatID\",\"SearchDate\",\"SearchLocID\",\"SearchOrdUsrAsc\",\n    \"SearchOrdUsrDesc\",\"SearchParamsSZ\",\"SearchQuerySZ\",\n    \"SearchRussian\",\"UserAgentFamilyID\",\"UserAgentID\",\n    \"UserAgentOSID\",\"UserDeviceID\",\"UserID\",\"UserIPID\",\n    \"UserLogged\",\"UserPrevPhoneRequest\",\n    \"UserPrevPrevPrevQryDate\",\"UserPrevPrevQryDate\",\n    \"UserPrevQryDate\",\"UserPrevVisitReq\",\"UserPrevVisitReqUni\",\n    \"UserQryTotalTime\",\n    \"ProbAdID\",\"ProbAdCatID\",\"ProbAdParams\",\n    \"ProbUserID\",\"ProbUserIPID\",\"ProbUserAgentID\",\n    \"ProbUserAgentOSID\",\"ProbUserDeviceID\",\n    \"ProbUserAgentFamilyID\",\"ProbSearchLocID\",\n    \"ProbSearchCatID\",\"ProbAdCatIDUserAgentFamilyID\",\n    \"ProbAdIDUserAgentFamilyID\",\"ProbAdCatIDUserAgentOSID\",\n    \"ProbAdIDUserAgentOSID\",\"ProbAdCatIDUserID\",\"ProbAdIDUserID\",\n    \"ProbAdCatIDUserIPID\",\"ProbAdIDUserIPID\",\n    \"ProbAdCatIDSearchCatID\",\"ProbAdIDSearchCatID\",\n    \"ProbAdCatIDSearchLocID\",\"ProbAdIDSearchLocID\",\n    \"ProbSearchCatIDUserAgentFamilyID\",\n    \"ProbSearchLocIDUserAgentFamilyID\",\n    \"ProbSearchCatIDUserAgentOSID\",\n    \"ProbSearchLocIDUserAgentOSID\",\"ProbSearchCatIDUserID\",\n    \"ProbSearchLocIDUserID\",\"ProbSearchCatIDUserIPID\",\n    \"ProbSearchLocIDUserIPID\",\n    'SearchDayYear', 'SearchPosition2Count', 'SearchPosition6Count', \n    'SearchPosition7Count', 'AdPosition1Count', 'AdPosition7Count', \n    'SearchParamsCount', 'LocationUserUniqueCount', 'CategoryUserUniqueCount', \n    'SearchIDPreviousAge', 'AdParamsSize', 'AdParamsCount', 'UserAdCount', \n    'AdCategoryPriceDeviation', 'UserAdViewTotalCount', 'UserAdViewUniqueCount', \n    'UserAdCategoryPriceMean', 'UserAdCategoryPriceMedian', \n    'UserAdCategoryPriceMin', 'UserAdCategoryPriceMax', 'UserAdViewTotalCount2', \n    'UserAdViewUniqueCount2', 'UserAdCategoryPriceMean2', \n    'UserAdCategoryPriceMedian2', 'UserAdCategoryPriceMin2', \n    'UserAdCategoryPriceMax2'\n  )\n\n  extra.tr.sel <- \"int(row[\\\"SearchOrdUsrDesc\\\"]) <= 7 and\" # row[\\\"SearchDate\\\"]) >= 1431396000\n  system(paste(\n    \"cd ../avito-context-click-py &&\", \n    \"pypy -u convert_csv_to_libsvm.py\", \n    \"-input_files ../data/output-r/data.all.tree.full.combine.csv\",\n    \"-out_selector '{\", \n    \"\\\"../data/output-libsvm/data.val.tr.full.libsvm\\\": lambda file, row: \", extra.tr.sel, \" row[\\\"SearchType\\\"] in [\\\"hist\\\", \\\"tr\\\"],\",   \n    \"\\\"../data/output-libsvm/data.val.tt.full.libsvm\\\": lambda file, row: row[\\\"SearchType\\\"] in [\\\"val\\\"],\",\n    \"\\\"../data/output-libsvm/data.test.tr.full.libsvm\\\": lambda file, row: \", extra.tr.sel, \" row[\\\"SearchType\\\"] in [\\\"hist\\\", \\\"tr\\\", \\\"val\\\"],\", \n    \"\\\"../data/output-libsvm/data.test.tt.full.libsvm\\\": lambda file, row: row[\\\"SearchType\\\"] in [\\\"test\\\"]\",\n    \"}'\",\n    \"-feat_map_file ../data/output-libsvm/data.all.full.fmap\",\n    \"-col_out IsClick\",\n    \"-col_in_num\", paste(unique(cols.in.combine.full), collapse=' '),\n    \"-missing_values ''  'na'  'nan' 'NA' 'NaN' '-1'\",\n    \">> ../data/log/data_build/combine_datasets.log 2>&1\"))\n  \n  \n  cat(\"\\nDone!\\n\")\n  \n  fn.clean.worker()\n}\nfn.kill.wk()\n\n",
    "created" : 1439613701743.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1364564450",
    "id" : "4AAAB282",
    "lastKnownWriteTime" : 1439613853,
    "path" : "~/Documents/eclipse/AvitoContext2015/final_model/avito-context-click-r/data.combine.R",
    "project_path" : "data.combine.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}